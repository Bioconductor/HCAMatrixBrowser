swagger: '2.0'
info:
  version: '1.0.0'
  title: HCA Matrix Service
  description: Human Cell Atlas Matrix Service API
  contact: {}
host: ${API_HOST}
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /v0/matrix:
    post:
      description: Prepares a single expression matrix combining all expression matrices belonging to the specified analysis bundles. On success, this request will asynchronously start a job to prepare the expression matrix and return with the request ID of the job. The request ID can be used to retrieve the status and results of the job from the GET endpoint.
      summary: matrix.lambdas.api.v0.core.post_matrix
      tags:
      - v0
      operationId: matrix.lambdas.api.v0.core.post_matrix
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: false
        description: Use either bundle_fqids or bundle_fqids_url to specify input analysis bundles; bundle_fqids expects a list of fully-qualified IDs (bundle_uuid.bundle_version); bundle_fqids_url expects a URL that serves a Data Browser download manifest TSV file. Use the format field to specify the desired file format of the output expression matrix. Supported format values are 'loom', 'csv' and 'mtx'.
        schema:
          $ref: '#/definitions/v0_MatrixRequest'
      responses:
        202:
          description: Matrix request accepted
          schema:
            $ref: '#/definitions/v0_MatrixResponse'
          headers: {}
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/v0_MatrixErrorResponse'
  /v0/matrix/{request_id}:
    get:
      description: Returns the status, and URI of the result if available, of a matrix query request. The status of a request can be 'Complete', 'In Progress' or 'Failed'. If the request is 'Complete', the matrix_location field will be populated with a URL to download the matrix. If the request 'Failed', the error message will be available in the message field.
      summary: matrix.lambdas.api.v0.core.get_matrix
      tags:
      - v0
      operationId: matrix.lambdas.api.v0.core.get_matrix
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: request_id
        in: path
        required: true
        type: string
        description: The request ID generated by a POST request.
      responses:
        200:
          description: Request found
          schema:
            $ref: '#/definitions/v0_MatrixResponse'
          headers: {}
        404:
          description: Request not found
          schema:
            $ref: '#/definitions/v0_MatrixErrorResponse'
  /v0/matrix/formats:
    get:
      description: Returns the list of expression matrix formats that can be requested from this service.
      summary: matrix.lambdas.api.v0.core.get_formats
      tags:
      - v0
      operationId: matrix.lambdas.api.v0.core.get_formats
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/v0_MatrixFormat'
          headers: {}
  /v0/dss/notification:
    post:
      description: Handles a DSS notification event such as bundle CREATE, DELETE and TOMBSTONE.
      summary: matrix.lambdas.api.v0.core.dss_notification
      tags:
      - internal
      operationId: matrix.lambdas.api.v0.core.dss_notification
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: false
        description: DSS subscription event JSON payload
        schema:
          $ref: '#/definitions/v0_DssNotification'
      responses:
        200:
          description: Success
          schema:
            type: string
          headers: {}
  /v1/matrix:
    post:
      description: >
        Request an expression matrix using a set of filters to be ANDed and applied to the HCA expression data.
      summary: matrix.lambdas.api.v1.core.post_matrix
      tags:
      - v1
      operationId: matrix.lambdas.api.v1.core.post_matrix
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/v1_MatrixRequest'
      responses:
        202:
          description: Matrix request accepted.
          schema:
            $ref: '#/definitions/v1_MatrixResponse'
          headers: {}
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/v1_MatrixErrorResponse'
        413:
          description: Filter entity too large.
          schema:
            $ref: '#/definitions/v1_MatrixErrorResponse'
  /v1/matrix/{request_id}:
    get:
      description: Get status and result of a matrix request
      summary: matrix.lambdas.api.v1.core.get_matrix
      tags:
      - v1
      operationId: matrix.lambdas.api.v1.core.get_matrix
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: request_id
        in: path
        required: true
        type: string
        format: uuid
        description: ID returned by a previous matrix request.
      responses:
        200:
          description: Matrix request found.
          schema:
            $ref: '#/definitions/v1_MatrixResponse'
          headers: {}
        404:
          description: Matrix request id not found.
          schema:
            $ref: '#/definitions/v1_MatrixErrorResponse'
  /v1/filters:
    get:
      description: >
        Get a list of filters that a POST to /matrix will accept.
      summary: matrix.lambdas.api.v1.core.get_filters
      tags:
      - v1
      operationId: matrix.lambdas.api.v1.core.get_filters
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Successfully return filter list.
          schema:
            type: array
            items:
              type: string
          headers: {}
  /v1/filters/{filter_name}:
    get:
      description: >
        Get detailed information about a filter that can be applied to the HCA expression data.
      summary: matrix.lambdas.api.v1.core.get_filter_detail
      tags:
      - v1
      operationId: matrix.lambdas.api.v1.core.get_filter_detail
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: filter_name
        in: path
        required: true
        type: string
        description: Filter to describe.
      responses:
        200:
          description: Filter found.
          schema:
            type: object
          headers: {}
        404:
          description: Filter not found.
          schema:
            $ref: '#/definitions/v1_MatrixErrorResponse'
  /v1/formats:
    get:
      description: >
        Get a list of matrix formats that a POST to /matrix will accept.
      summary: matrix.lambdas.api.v1.core.get_formats
      tags:
      - v1
      operationId: matrix.lambdas.api.v1.core.get_formats
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Successfully return format list.
          schema:
            type: array
            items:
              type: string
          headers: {}
  /v1/formats/{format_name}:
    get:
      description: Get a description of a matrix format
      summary: matrix.lambdas.api.v1.core.get_format_detail
      tags:
      - v1
      operationId: matrix.lambdas.api.v1.core.get_format_detail
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: format_name
        in: path
        required: true
        type: string
        description: Format to describe
      responses:
        200:
          description: Format found.
          schema:
            type: string
          headers: {}
        404:
          description: Format not found.
          schema:
            $ref: '#/definitions/v1_MatrixErrorResponse'
  /v1/features:
    get:
      description: >
        Get a list of matrix feature types that a POST to /matrix will accept.
      summary: matrix.lambdas.api.v1.core.get_features
      tags:
      - v1
      operationId: matrix.lambdas.api.v1.core.get_features
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Successfully return feature list.
          schema:
            type: array
            items:
              type: string
          headers: {}
  /v1/features/{feature_name}:
    get:
      description: Get a information about a matrix feature type
      summary: matrix.lambdas.api.v1.core.get_feature_detail
      tags:
      - v1
      operationId: matrix.lambdas.api.v1.core.get_feature_detail
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: feature_name
        in: path
        required: true
        type: string
        description: Feature type to describe
      responses:
        200:
          description: Feature found.
          schema:
            $ref: '#/definitions/v1_MatrixFeatureDetail'
          headers: {}
        404:
          description: Feature not found.
          schema:
            $ref: '#/definitions/v1_MatrixErrorResponse'
  /v1/fields:
    get:
      description: >
        Get a list of metadata field names that a POST to /matrix will accept.
      summary: matrix.lambdas.api.v1.core.get_fields
      tags:
      - v1
      operationId: matrix.lambdas.api.v1.core.get_fields
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Successfully return field list.
          schema:
            type: array
            items:
              type: string
          headers: {}
  /v1/fields/{field_name}:
    get:
      description: >
        Get detailed information about an available metadata field.
      summary: matrix.lambdas.api.v1.core.get_field_detail
      tags:
      - v1
      operationId: matrix.lambdas.api.v1.core.get_field_detail
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: field_name
        in: path
        required: true
        type: string
        description: Field to describe.
      responses:
        200:
          description: Field found.
          schema:
            type: object
          headers: {}
        404:
          description: Field not found.
          schema:
            $ref: '#/definitions/v1_MatrixErrorResponse'
definitions:
  v0_MatrixRequest:
    title: v0_MatrixRequest
    type: object
    properties:
      bundle_fqids:
        type: array
        items:
          type: string
      bundle_fqids_url:
        type: string
      format:
        $ref: '#/definitions/v0_MatrixFormat'
  v0_MatrixFormat:
    title: v0_MatrixFormat
    example: loom
    type: string
    enum:
    - loom
    - csv
    - mtx
  v0_MatrixResponse:
    title: v0_MatrixResponse
    type: object
    properties:
      request_id:
        type: string
        format: uuid
      status:
        $ref: '#/definitions/v0_MatrixRequestStatus'
      matrix_location:
        type: string
      eta:
        type: string
      message:
        type: string
  v0_MatrixRequestStatus:
    title: v0_MatrixRequestStatus
    example: In Progress
    type: string
    enum:
    - In Progress
    - Complete
    - Failed
  v0_MatrixErrorResponse:
    title: v0_MatrixErrorResponse
    type: object
    properties:
      message:
        type: string
  v0_DssNotification:
    title: v0_DssNotification
    type: object
    properties:
      transaction_id:
        type: string
      subscription_id:
        type: string
      event_type:
        type: string
      match:
        $ref: '#/definitions/Match'
  v1_ComparisonFilterOperator:
    title: v1_ComparisonFilterOperator
    description: Comparison operators allowed in matrix filters.
    example: =
    type: string
    enum:
    - =
    - '!='
    - '>'
    - <
    - '>='
    - <=
    - in
  v1_LogicalFilterOperator:
    title: v1_LogicalFilterOperator
    description: Logical operators for combining filters.
    example: and
    type: string
    enum:
    - and
    - or
    - not
  v1_ComparisonFilter:
    title: v1_ComparisonFilter
    type: object
    properties:
      op:
        $ref: '#/definitions/v1_ComparisonFilterOperator'
      field:
        type: string
      value:
        type: object
  v1_LogicalFilter:
    title: v1_LogicalFilter
    type: object
    properties:
      op:
        $ref: '#/definitions/v1_LogicalFilterOperator'
      value:
        type: object
  v1_MatrixRequest:
    title: v1_MatrixRequest
    description: Request for an expression matrix.
    type: object
    properties:
      filter:
        description: Filter to apply in a matrix request.
        type: object
      fields:
        description: Metadata fields to include in output matrix.
        type: array
        items:
          type: string
      format:
        description: Format for the output matrix.
        example: loom
        type: string
        default: loom
      feature:
        description: Feature type to include in the output matrix. For example, genes vs. transcripts.
        example: gene
        type: string
        default: gene
    required:
    - filter
  v1_MatrixResponse:
    title: v1_MatrixResponse
    type: object
    properties:
      request_id:
        description: UUID identifying a matrix request.
        type: string
        format: uuid
      status:
        description: Status of a matrix request, for example whether it is still running or has finished.
        type: string
      matrix_url:
        description: URL where matrix can be retrieved.
        type: string
      message:
        description: Additional information about the matrix request.
        type: string
      eta:
        description: Estimated time remaining for the request to complete.
        type: string
    required:
    - request_id
    - status
  v1_MatrixErrorResponse:
    title: v1_MatrixErrorResponse
    type: object
    properties:
      status_code:
        description: HTTP status code of error.
        type: integer
        format: int32
      message:
        description: Error message.
        type: string
  v1_MatrixFeatureDetail:
    title: v1_MatrixFeatureDetail
    type: object
    properties:
      feature:
        description: Feature type to include in the output matrix. For example, genes vs. transcripts.
        example: gene
        type: string
        default: gene
      feature_description:
        description: Description of the feature type.
        type: string
  v1_FieldDetail:
    title: v1_FieldDetail
    type: object
    properties:
      field_name:
        description: Name of the field.
        type: string
      field_description:
        description: Description of the meaning of the field.
        type: string
      field_type:
        description: Type of the field, for example numeric or categorical.
        type: string
    required:
    - field_name
    - field_description
    - field_type
  v1_NumericFieldDetail:
    title: v1_NumericFieldDetail
    type: object
    properties:
      field_name:
        description: Name of the field.
        type: string
      field_description:
        description: Description of the meaning of the field.
        type: string
      field_type:
        description: Type of the field, for example numeric or categorical.
        type: string
      minimum:
        description: Minimum value for this field in the HCA expression data.
        type: number
        format: double
      maximum:
        description: Maximum value for this field in the HCA expression data.
        type: number
        format: double
    required:
    - field_name
    - field_description
    - field_type
    - minimum
    - maximum
  v1_CategoricalFieldDetail:
    title: v1_CategoricalFieldDetail
    type: object
    properties:
      field_name:
        description: Name of the field.
        type: string
      field_description:
        description: Description of the meaning of the field.
        type: string
      field_type:
        description: Type of the field, for example numeric or categorical.
        type: string
      cell_counts:
        description: Count of cells associated with each possible value of the field.
        type: object
        additionalProperties:
          type: integer
          format: int32
    required:
    - field_name
    - field_description
    - field_type
    - cell_counts
  Match:
    title: Match
    type: object
    properties:
      bundle_uuid:
        type: string
      bundle_version:
        type: string
tags:
- name: v0
  description: ''
- name: internal
  description: ''
- name: v1
  description: ''
